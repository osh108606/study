using System.Collections.Generic;
using TMPro; // TextMeshPro ???? ?????? ???????? ???? ???????????? (???? ?????????? ???? ?????????? ????)
using UnityEngine;

// ???? ???????? UI?? ???????? ????????????.
// ???????? ?????? ?????? UI ???? ???????? ?????? ??????.
public class WeaponInventoryCanvase : MonoBehaviour
{

    private static WeaponInventoryCanvase instance;
    public static WeaponInventoryCanvase Instance
    {
        get 
        {
            if (instance == null)
                instance = FindFirstObjectByType<WeaponInventoryCanvase>(FindObjectsInactive.Include);

            return instance;
        }

    }


    // ???? ?????? ?????? ?????? (?? ?????? ?????? ?? ???????? ??????)
    public WeaponItemPanel itemPanePrefab;

    // ?????? ?????? ???????? ?????? ???? Transform (??: ScrollView?? Content)
    public Transform contentTr;

    // ?????? ???? ?????? ???????? ???????? ???????? ???? ?????? (???????? ???? ????)
    List<WeaponItemPanel> panels = new List<WeaponItemPanel>();

    List<Equipment> equipments = new List<Equipment>();
    public WeaponUseType weaponUseType;
    public WeaponSlotType weaponSetUpType;
    public void OpenWeaponInventory(WeaponUseType type ,WeaponSlotType setUpType)
    {
        gameObject.SetActive(true);
        Debug.Log($"WeaponInventoryCanvase OpenWeaponInventory() weaponUseType{type} WeaponSetUpType{setUpType}");
        weaponUseType = type;
           weaponSetUpType = setUpType;
        equipments.Clear();
        for (int i =0;i< User.Instance.userData.weapons.Count; i++)
        {
            WeaponItemData data = ItemManager.Instance.GetWeaponItemData(User.Instance.userData.weapons[i].key);
            if(data.weaponInfo.weaponUse == type)
            {
                equipments.Add(User.Instance.userData.weapons[i]);
            }
        }
        UpdateInventory();
    }

    // ???? ?????????? ???????? ?? ???????? Unity ?????? ??????
    public void UpdateInventory()
    {
        // ?????? ?????? ???? ???????? ???????? ???? ???? ?????? ????????.
        for (int i = 0; i < panels.Count; i++)
        {
            panels[i].gameObject.SetActive(false);
        }

        // ?????? ???????? ?????? ???? ???????? ??????????.
        for (int i = 0; i < equipments.Count; i++)
        {
            // ???????? ???????? ???? ?????? ???? ?????? ?????? ??????????.
            WeaponItemPanel panel = GetWeaponItemPanelInPool();
            // ???? ?????? ?????? ???? ???????? ???????? UI?? ???? ?????? ??????????.
            panel.SetWeapon(equipments[i]);
        }

        // ???? ???????? ?????? ????(Equipment)?? ?????? UI?? ??????????.
        Equipment equipment = User.Instance.GetSetUpWeapon(weaponSetUpType);
        SetEquipment(equipment);
    }

    // ???????? ?????? ???? ?????? ???? ?????? ?????? ??????????, ?????? ???? ???????? ??????
    public WeaponItemPanel GetWeaponItemPanelInPool()
    {
        for (int i = 0; i < panels.Count; i++)
        {
            if (panels[i].gameObject.activeSelf)
            {
                continue;
            }
            // ???? ?????? ?????? ???????? ?? ??????????.
            panels[i].gameObject.SetActive(true);
            return panels[i];
        }
        // ???? ?????? ?????? ??????, ???????? ?????????????? ?? ?????? ??????????.
        WeaponItemPanel panel = Instantiate(itemPanePrefab, contentTr);
        // ?????? ?????? ???????? ??????????.
        panels.Add(panel);
        return panel;
    }

    // ???? ?????? ???? ?????? UI?? ???????? ??????
    public void SetEquipment(Equipment equipment)
    {
        // ???? ?????????? ???? WeaponInfoContainer ?????????? ????, ?????? ???? ?????? ??????????.
        GetComponentInChildren<WeaponInfoContainer>().SetEquipment(equipment);
    }
}
